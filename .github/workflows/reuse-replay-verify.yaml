name: "*replay-verify reusable workflow"

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      GIT_SHA:
        required: false
        type: string
        description: The git SHA1 to test. If not specified, it will use the latest commit on main.
      # replay-verify config
      BUCKET:
        required: false
        type: string
        description: The bucket to use for the backup. If not specified, it will use the default bucket.
      SUB_DIR:
        required: false
        type: string
        description: The subdirectory to use for the backup. If not specified, it will use the default subdirectory.
      HISTORY_START:
        required: false
        type: string
        description: The history start to use for the backup. If not specified, it will use the default history start.
      TXNS_TO_SKIP:
        required: false
        type: string
        description: The number of transactions to skip. If not specified, it will use the default number of transactions to skip.
      BACKUP_CONFIG_TEMPLATE_PATH:
        description: "The path to the backup config template to use."
        type: string
        required: true
      # GHA job config
      RUNS_ON:
        description: "The runner to use for the job."
        type: string
        required: true
        default: "high-perf-docker-with-local-ssd"
      TIMEOUT_MINUTES:
        description: "The timeout for the job."
        type: number
        required: true
        default: 720

jobs:
  replay-verify:
    # if we're running on a PR, it's only for testing purposes, so we can set a shorter timeout
    timeout-minutes: ${{ inputs.TIMEOUT_MINUTES }}
    runs-on: ${{ inputs.RUNS_ON }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3
        with:
          ref: ${{ inputs.GIT_SHA }}

      - uses: ./.github/actions/rust-setup

      - name: Install AWS CLI
        shell: bash
        run: |
          scripts/dev_setup.sh -b -i awscli
          echo "${HOME}/bin/" >> $GITHUB_PATH # default INSTALL_DIR to path

      - name: Build CLI binaries in release mode
        shell: bash
        run: cargo build --release -p aptos-backup-cli --bin replay-verify --bin db-backup

      - name: Run module-verify in parallel
        shell: bash
        run: testsuite/module_verify.py
        env:
          BUCKET: ${{ inputs.BUCKET }}
          SUB_DIR: ${{ inputs.SUB_DIR }}
          BACKUP_CONFIG_TEMPLATE_PATH: ${{ inputs.BACKUP_CONFIG_TEMPLATE_PATH }}
