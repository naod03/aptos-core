name: "replay-verify"
on:
  # Allow triggering manually
  workflow_call:
  workflow_dispatch:
    inputs:
      GIT_SHA:
        required: false
        type: string
        description: The git SHA1 to test. If not specified, it will use the latest commit on main.
      NETWORK:
        required: true
        type: choice
        options:
          - testnet
          - mainnet
          - all
        description: The network to replay. If not specified, it will use the default network.
  schedule:
    - cron: "0 9/12 * * *"
  pull_request:
    paths:
      - ".github/workflows/replay-verify-multinetwork.yaml"
  push:
    branches:
      - devnet
      - testnet
      - mainnet
      - aptos-node-v*

# cancel redundant builds
concurrency:
  # cancel redundant builds on PRs (only on PR, not on branches)
  group: ${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.ref) || github.sha }}
  cancel-in-progress: true

jobs:
  # This job determines the target of the replay-verify job. It's a separate job so that we can use the `needs` syntax to make the replay-verify job depend on it.
  # The replay-verify job should run under these conditions:
  # - If we're running on a PR, we want to run the replay-verify job on all networks. But with a shorter timeout so as to only test the functionality of the workflow
  # - If we're running on a workflow_dispatch, we want to run the replay-verify job on the network specified in the workflow_dispatch.
  # - If we're running on a schedule, we want to run both the testnet and mainnet replay-verify jobs. This is the primary way the replay-verify workflow will run
  determine-networks:
    runs-on: ubuntu-latest
    outputs:
      target-network: ${{ steps.determine-networks.outputs.target-network }}
    steps:
      - name: Determine target network
        id: determine-networks
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # If we're running on a PR, we want to run the replay-verify job on all networks.
            echo "::set-output name=target-network::all"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # If we're running on a workflow_dispatch, we want to run the replay-verify job on the network specified in the workflow_dispatch.
            echo "::set-output name=target-network::${{ github.event.inputs.NETWORK }}" 
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            # If we're running on a schedule, we want to offset the mainnet and testnet runs
            echo "::set-output name=target-network::all"
          else
            echo "Unknown event: ${{ github.event_name }}"
            exit 1
          fi

      - name: Print target network
        run: |
          echo "Target network: ${{ steps.determine-networks.outputs.target-network }}"

  testnet-replay-verify:
    needs: determine-networks
    if: |
      ${{ needs.determine-networks.outputs.target-network == 'testnet' 
      || needs.determine-networks.outputs.target-network == 'all' }}
    uses: ./.github/workflows/reuse-replay-verify.yaml
    secrets: inherit
    with:
      GIT_SHA: ${{ inputs.GIT_SHA }}
      # replay-verify config
      BUCKET: aptos-testnet-backup-2223d95b
      SUB_DIR: e1
      HISTORY_START: 350000000 # TODO: We need an exhaustive list of txns_to_skip before we can set this to 0.
      TXNS_TO_SKIP: 46874937 151020059 409163615 409163669 409163708 409163774 409163845 409163955 409164059 409164191 414625832
      BACKUP_CONFIG_TEMPLATE_PATH: terraform/helm/fullnode/files/backup/s3-public.yaml
      # workflow config
      RUNS_ON: medium-perf-docker-with-local-ssd # TESTING ONLY
      TIMEOUT_MINUTES: ${{ github.event_name == 'pull_request' && 20 || 720 }}

  mainnet-replay-verify:
    needs: determine-networks
    if: |
      ${{ needs.determine-networks.outputs.target-network == 'testnet' }}
      || needs.determine-networks.outputs.target-network == 'all' }}
    uses: ./.github/workflows/reuse-replay-verify.yaml
    secrets: inherit
    with:
      GIT_SHA: ${{ inputs.GIT_SHA }}
      # replay-verify config
      BUCKET: aptos-mainnet-backup-backup-831a69a8
      SUB_DIR: e1
      HISTORY_START: 0
      TXNS_TO_SKIP: 12253479 12277499
      BACKUP_CONFIG_TEMPLATE_PATH: terraform/helm/fullnode/files/backup/s3-public.yaml
      # workflow config
      RUNS_ON: medium-perf-docker-with-local-ssd # TESTING ONLY
      TIMEOUT_MINUTES: ${{ github.event_name == 'pull_request' && 20 || 720 }}
